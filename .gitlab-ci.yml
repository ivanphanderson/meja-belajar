image: gradle:7.4-jdk11
before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - apt-get update -qy
  - apt-get install -y ruby-dev

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

stages:
  - build
  - test
  - deploy

build:
  stage: build
  script:
    - gradle assemble
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 day

test:
  stage: test
  script:
    - export SPRING_PROFILES_ACTIVE=test
    - gradle check --stacktrace
    - cat build/reports/jacoco/test/html/index.html | grep -o '<tfoot>.*</tfoot>'
  artifacts:
    paths:
      - build/reports/jacoco/*
    expire_in: 1 day

sonarqube-check:
  stage: test
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: gradle sonarqube -D "sonar.qualitygate.wait=true" -D "sonar.host.url=$SONAR_HOST_URL" -D "sonar.projectKey=$SONAR_PROJECT_KEY" -D "sonar.login=$SONAR_TOKEN"
  allow_failure: true

checkstyle:
  stage: test
  script: gradle checkstyleMain checkstyleTest
  allow_failure: true
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull

deployment:
  image: ruby:latest
  stage: deploy
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  script:
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
    - export HEROKU_API_KEY=$HEROKU_API_KEY
  environment:
    name: production
    url: $HEROKU_APP_HOST
  only:
    - staging
    - master
